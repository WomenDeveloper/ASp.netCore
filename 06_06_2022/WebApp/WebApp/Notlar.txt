ASP     =>Active Serper Pages
ASP.NET => .NET Framework üzerinde (Web Forms)
Web Forms 
  *ViewState -
  *Tasarım ile Kodu birbirinden ayırma...
  *Form Kontrollerin çalışma mantığı => Windows uygulamalarına benziyordu...

MVC(Model View Controller)
  * Viewstate yok
  * Webin calisma mantığğına daha uygun bir tasarım deseni
  * Projeyi Mantıksal ve Fiziksel olarak birbirinden ayırma... 
  * Front-End, Back-End ve Full-Stack kavramları...

CORE MVC(2016) 
  *Multi-Platform olmasi

  MVC
   *MVC web.config => XML bazlı ayar dosyası...
   *View html,@razor, HtmlHelpers
   *Aksiyonların geri donus tipi ActionResult

  CORE MVC
  *appsettings.json =>JSON tabanlı ayar dosyasi...
  *tamamen async destegi ile geliyor...
  *kestrel uzerinde calısıyor...
  *web siteleri birer exe dosyasi(Service gibi calisiyor...)
  *MVC6'ya kadar => program.cs(Main) ve startup sınıfı vardı
  *MVC6 dan sonra =>sadece program.cs var Main yazmak zorunda degiliz...
  *global.asax artık yok...
  *HttpModule vb de yok. Yerine Middleware kullanılır...
  *Middleware:Requestin Endpointe ulaşıncaya kadar geçtiği aşamalar...
  *DI kullanımı (Dahili IoC)
  *View iele ilgili olarak diğerlerine ek olarak; TagHelpers
  *MVC core 6 ile Minimal API geldi...
  *Artık statik dosyalar wwwroot klasoru içerisinde
  *Aksiyonların geri donus tipi IActionResult
  *MVC Core 6 ile birlikte namespace kullanımında değişiklikler var (global namespace)

  MVC Tasarım Deseninde
  Controller => Request , Response

  istenilen sayfaya gitmek için
  *Her Controller için varsayılan Action => Index
  localhost..../Controller/Action

  QueryString:Herhangi bir web uygulamasında; adres çubugu üzerinde veri taşıma işlemidir..
  ? ile başlar Ad=deger&Soyad=deger gibi kullanılır...
  ModelBinder aynı isimli olan degiskeni aksiyonun parametresine baglar... 